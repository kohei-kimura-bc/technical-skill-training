// Common
param location string
param tenant_id string
param subscription_id string
param utc string = utcNow()
var token = uniqueString(subscription_id, utc) // リソース名を一意にするため

// Create App Service Plan
param asp_name string
param asp_sku string
var asp_name_with_token = '${asp_name}-${token}'

resource app_service_plan 'Microsoft.Web/serverfarms@2021-02-01' = {
  name: asp_name_with_token
  location: location
  sku: {
    name: asp_sku
  }
  kind: 'linux' // Pythonはlinuxのみ対応しているため、linuxを選択
  properties: {
    reserved: true
  }
}

// Create App Service
param web_app_name string
param linux_fx_version string
var web_app_name_with_token = '${web_app_name}-${token}'

resource web_app 'Microsoft.Web/sites@2021-02-01' = {
  name: web_app_name_with_token
  location: location
  properties: {
    httpsOnly: true
    serverFarmId: app_service_plan.id // App Serviceの基盤（App Service Plan）を指定する必要があるため。
    siteConfig: {
      linuxFxVersion: linux_fx_version
      alwaysOn: true // 常時接続可能に設定
      minTlsVersion: '1.2'
      ftpsState: 'FtpsOnly'
    }
  }
  identity: {
    type: 'SystemAssigned'
  }
}

// Create Storage Account
param storage_account_name string
param storage_account_type string
var storage_account_name_with_token = '${storage_account_name}${token}' // '-'は使えない

resource storage_account 'Microsoft.Storage/storageAccounts@2022-05-01' = {
  name: storage_account_name_with_token
  location: location
  sku: {
    name: storage_account_type
  }
  kind: 'StorageV2'
  properties: {
    supportsHttpsTrafficOnly: true
    allowBlobPublicAccess: false
    allowSharedKeyAccess: true
    defaultToOAuthAuthentication: false
    minimumTlsVersion: 'TLS1_2'
    allowedCopyScope: null
    isHnsEnabled: false
    isSftpEnabled: false
    isNfsV3Enabled: false
    allowCrossTenantReplication: false
    accessTier: 'Hot' // アプリが、ストレージへ頻繁にアクセスするため、Hotを選択
    publicNetworkAccess: 'Enabled'
    routingPreference: {
      routingChoice: 'MicrosoftRouting'
    }
    networkAcls: {
      bypass: 'AzureServices'
      virtualNetworkRules: []
      ipRules: []
      defaultAction: 'Allow'
    }
    immutableStorageWithVersioning: {
      enabled: false
    }
    encryption: {
      services: {
        file: {
          keyType: 'Account'
          enabled: true
        }
        blob: {
          keyType: 'Account'
          enabled: true
        }
      }
      keySource: 'Microsoft.Storage'
      requireInfrastructureEncryption: false
    }
  }
}

// Create Blob Storage
resource blobServices 'Microsoft.Storage/storageAccounts/blobServices@2023-01-01' = {
  name: 'default'
  parent: storage_account
  properties: {
    restorePolicy: {
      enabled: false
    }
    deleteRetentionPolicy: {
      enabled: true
      allowPermanentDelete: false
      days: 7
    }
    containerDeleteRetentionPolicy: {
      enabled: true
      allowPermanentDelete: false
      days: 7
    }
    isVersioningEnabled: false
    changeFeed: {
      enabled: false
    }
  }
}

// Create File Services
resource file_services 'Microsoft.Storage/storageAccounts/fileServices@2023-01-01' = {
  name: 'default'
  parent: storage_account
  properties: {
    shareDeleteRetentionPolicy: {
      enabled: true
      allowPermanentDelete: false
      days: 7
    }
  }
}

// Create App Insights
param app_insights_name string
var app_insights_name_with_token = '${app_insights_name}-${token}'

resource app_insights 'Microsoft.Insights/components@2020-02-02' = {
  name: app_insights_name_with_token
  location: location
  kind: 'web' // webアプリと接続するため
  properties: {
    Application_Type: 'web' // webアプリと接続するため
    WorkspaceResourceId: log_analytics_workspace.id // ログを保存するLogAnalyticsの情報を指定
  }
}

// Create Log Analytics Workspace
param log_analytics_name string
var log_analytics_name_with_token = '${log_analytics_name}-${token}'

resource log_analytics_workspace 'Microsoft.OperationalInsights/workspaces@2020-08-01' = {
  name: log_analytics_name_with_token
  location: location
  properties: {
    sku: {
      name: 'PerGB2018' // データ量に基づいて課金されるプランを指定
    }
    retentionInDays: 120 // データの保存期間を120日に設定
    features: {
      searchVersion: 1
      legacy: 0
      enableLogAccessUsingOnlyResourcePermissions: true
    }
  }
}

// Create Azure Functions
param func_app_name string
var func_app_name_with_token = '${func_app_name}-${token}'
param func_worker_runtime string

resource functionApp 'Microsoft.Web/sites@2022-03-01' = {
  name: func_app_name_with_token
  location: location
  kind: 'functionapp,linux' // Azure Functionsがlinux上で稼働していることを明示的に指定
  properties: {
    reserved: true
    serverFarmId: app_service_plan.id // App Functionsの基盤（App Service Plan）を指定
    siteConfig: {
      linuxFxVersion: linux_fx_version
      alwaysOn: true // 常時接続可能に設定
      appSettings: [
        {
          name: 'APPLICATIONINSIGHTS_CONNECTION_STRING'
          value: app_insights.properties.ConnectionString // 接続するApp Insightを指定
        }
        {
          name: 'AzureWebJobsStorage'
          value: 'DefaultEndpointsProtocol=https;AccountName=${storage_account_name_with_token};EndpointSuffix=${environment().suffixes.storage};AccountKey=${storage_account.listKeys().keys[0].value}'
        }
        {
          name: 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING'
          value: 'DefaultEndpointsProtocol=https;AccountName=${storage_account_name_with_token};EndpointSuffix=${environment().suffixes.storage};AccountKey=${storage_account.listKeys().keys[0].value}'
        }
        {
          name: 'WEBSITE_CONTENTSHARE'
          value: toLower(func_app_name)
        }
        {
          name: 'FUNCTIONS_EXTENSION_VERSION'
          value: '~4'
        }
        {
          name: 'FUNCTIONS_WORKER_RUNTIME'
          value: func_worker_runtime
        }
      ]
    }
  }
}

// Create Key Vault
param key_vault_name string
var key_vault_name_with_token = '${key_vault_name}-${token}'
param object_id_member1 string
param object_id_member2 string

resource key_vault 'Microsoft.KeyVault/vaults@2024-04-01-preview' = {
  name: key_vault_name_with_token
  location: location
  properties: {
    sku: {
      // 標準的なskuを指定
      family: 'A'
      name: 'standard'
    }
    tenantId: tenant_id
    // 各ユーザーのKey Vaultへのアクセスポリシーを指定（Full Access）
    accessPolicies: [
      {
        tenantId: tenant_id
        objectId: object_id_member1
        permissions: {
          keys: [
            'all'
          ]
          secrets: [
            'all'
          ]
          certificates: [
            'all'
          ]
          storage: []
        }
      }
      {
        tenantId: tenant_id
        objectId: object_id_member2
        permissions: {
          keys: [
            'all'
          ]
          secrets: [
            'all'
          ]
          certificates: [
            'all'
          ]
          storage: []
        }
      }
    ]
    enabledForDeployment: false
    enableSoftDelete: true
    vaultUri: 'https://${key_vault_name_with_token}.vault${environment().suffixes.keyvaultDns}'
    provisioningState: 'Succeeded'
    publicNetworkAccess: 'Enabled'
  }
}

// Create AI Hub (Required:Key vault, Storage Account)
param ai_hub_name string
var ai_hub_name_with_token = '${ai_hub_name}-${token}'

resource ai_hub 'Microsoft.MachineLearningServices/workspaces@2024-07-01-preview' = {
  name: ai_hub_name_with_token
  location: location
  sku: {
    // 標準的なskuを指定
    name: 'Basic'
    tier: 'Basic'
  }
  kind: 'Hub'
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    friendlyName: ai_hub_name_with_token
    storageAccount: storage_account.id
    keyVault: key_vault.id
    hbiWorkspace: false
    managedNetwork: {
      isolationMode: 'Disabled'
    }
    allowRoleAssignmentOnRG: true
    v1LegacyMode: false
    publicNetworkAccess: 'Enabled'
    ipAllowlist: []
    discoveryUrl: 'https://${location}.api.azureml.ms/discovery'
    enableSoftwareBillOfMaterials: false
    workspaceHubConfig: {
      defaultWorkspaceResourceGroup: '/subscriptions/${subscription_id}/resourceGroups/${resourceGroup().name}'
    }
    enableDataIsolation: true
    systemDatastoresAuthMode: 'accesskey'
    enableServiceSideCMKEncryption: false
  }
}

// Create AI Project
param ai_project_name string
var ai_project_name_with_token = '${ai_project_name}-${token}'

resource ai_project 'Microsoft.MachineLearningServices/workspaces@2024-07-01-preview' = {
  name: ai_project_name_with_token
  location: location
  sku: {
    // 標準的なskuを指定
    name: 'Basic'
    tier: 'Basic'
  }
  kind: 'Project'
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    friendlyName: ai_project_name_with_token
    hbiWorkspace: false
    allowRoleAssignmentOnRG: false
    v1LegacyMode: false
    publicNetworkAccess: 'Enabled'
    discoveryUrl: 'https://${location}.api.azureml.ms/discovery'
    enableSoftwareBillOfMaterials: false
    hubResourceId: ai_hub.id
    enableDataIsolation: true
    systemDatastoresAuthMode: 'accesskey'
    enableServiceSideCMKEncryption: false
  }
}

// Create Azure AI services
param ai_services_name string
var ai_services_name_with_token = '${ai_services_name}-${token}'

resource ai_services 'Microsoft.CognitiveServices/accounts@2024-06-01-preview' = {
  name: ai_services_name_with_token
  location: 'eastus' // gpt-4oモデルが、japaneastに対応していないため、eastusリージョンを選択
  sku: {
    // 標準的なskuを指定
    name: 'S0'
  }
  kind: 'AIServices'
  properties: {
    customSubDomainName: ai_services_name_with_token
    publicNetworkAccess: 'Enabled'
  }
}

// Create Document Intelligence
param document_intelligence_name string
var document_intelligence_name_with_token = '${document_intelligence_name}-${token}'

resource document_intelligence 'Microsoft.CognitiveServices/accounts@2021-10-01' = {
  name: document_intelligence_name_with_token
  location: location
  sku: {
    name: 'S0' // 一番安いskuを指定
  }
  kind: 'FormRecognizer' // PDF → md変換ができるDocument Intelligenceの種類を指定
  properties: {
    apiProperties: {
      qna: {
        enabled: false
      }
    }
  }
}

// Create Action Groups
param action_groups_name string
var action_groups_name_with_token = '${action_groups_name}-${token}'
param action_groups_short_name string

resource action_groups 'Microsoft.Insights/actionGroups@2024-10-01-preview' = {
  name: action_groups_name_with_token
  location: 'global'
  properties: {
    groupShortName: action_groups_short_name
    emailReceivers: [
      {
        name: 'Arata, Yamada' // アラートの送信先の名前を指定
        emailAddress: 'arata-yamada@mail.nissan.co.jp' // アラートメールの送信先メールアドレスを指定
        useCommonAlertSchema: true
      }
    ]
    enabled: true
  }
}

// Create Metrics Alert
param metric_alert_name string
param metric_alert_description string

// アラートの通知条件を指定
resource metricAlerts 'Microsoft.Insights/metricAlerts@2018-03-01' = {
  name: metric_alert_name
  location: 'global'
  properties: {
    description: metric_alert_description
    severity: 1 // エラーの場合に通知を飛ばすため。
    enabled: true
    scopes: [
      app_insights.id // 接続するApp Insightsを指定するため。
    ]
    evaluationFrequency: 'PT1H' // 1時間ごとに評価するため。
    windowSize: 'PT1H' // 過去1時間を対象範囲とするため。
    criteria: {
      allOf: [
        {
          threshold: 1 // 通知の閾値を指定
          name: 'Metric1'
          metricNamespace: 'Azure.ApplicationInsights'
          metricName: 'ClosedInqUpdTimer Failures' // 通知メールのタイトルを指定
          operator: 'GreaterThanOrEqual'
          timeAggregation: 'Count' // 検知回数を閾値に設定
          skipMetricValidation: true
          criterionType: 'StaticThresholdCriterion'
        }
      ]
      'odata.type': 'Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria'
    }
    autoMitigate: false
    targetResourceType: 'microsoft.insights/components'
    targetResourceRegion: 'japaneast'
    actions: [
      {
        actionGroupId: action_groups.id
        webHookProperties: {}
      }
    ]
  }
}

// Create SQL database and SQL Server
param admin_login string
@secure()
param admin_password string
param database_name string
param server_name string
var admin_password_with_token = '${admin_password}-${token}'
var database_name_with_token = '${database_name}-${token}'
var server_name_with_token = '${server_name}-${token}'

resource sql_server 'Microsoft.Sql/servers@2022-02-01-preview' = {
  name: server_name_with_token
  location: location
  properties: {
    administratorLogin: admin_login
    administratorLoginPassword: admin_password_with_token
    version: '12.0'
    minimalTlsVersion: '1.2'
    publicNetworkAccess: 'Enabled'
  }
}

resource sql_database 'Microsoft.Sql/servers/databases@2022-11-01-preview' = {
  name: database_name_with_token
  parent: sql_server
  location: location
  properties: {
    createMode: 'Default'
    autoPauseDelay: 1440 // 自動一時停止の遅延時間（分）。1440分 = 24時間
    minCapacity: 1 // 最小vCore数を指定
  }
  sku: {
    name: 'GP_S_Gen5'
    tier: 'GeneralPurpose'
    family: 'Gen5'
    capacity: 1
  }
}
